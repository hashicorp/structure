///-------------------------------------------------------------------------///
/// WARNING: Private Sass module (definitions may change at ANY time)
///-------------------------------------------------------------------------///
$_module: "PDS.Components.Banner";
/* --- [debug] CONFIG: #{$_module} --- */
@use "sass:map";
@use "../../theme";
@use "../../tokens/font" as Font;
@use "../../tokens/scale";
@use "../_config" as Component;
@use "../icon/__config" as Icon;

// FIXME: replace usage with PDS.Tokens.Scale value
$__size14: 14px;
$__header-color: var(--pds-banner-header-color, inherit);
$__header-fontSize: theme.$fontSize;
$__icon-color: var(--pds-banner-icon-color, inherit);
$__icon-size: theme.$size--md; // same as <Icon @size="md">

$backgroundColor: var(--pds-banner-backgroundColor, transparent);
$borderColor: var(--pds-banner-borderColor, transparent);
$borderRadius: theme.$borderRadius;
$color: var(--pds-banner-color, inherit);
$columnGap: theme.$size--2xs; // 0.25rem (4px)
$fontSize: theme.$banner-fontSize;
$paddingBlock: $__size14;
$paddingInline: theme.$size--sm; // 0.75rem / 12px (scale.$sm--1 / 0.75rem / 12px)
$rowGap: 0; // FIXME: use theme.$size--xs; // 0.5rem (8px)

/// ===== VARIANT STYLES ===== ///

$ERROR: (
  backgroundColor: theme.$failure-l2,
  borderColor: theme.$failure-l1,
  header-color: theme.$failure-base,
  icon-color: theme.$failure-base,
);
$INFO: (
  backgroundColor: theme.$info-l2,
  borderColor: theme.$info-l1,
  header-color: theme.$info-d1,
  icon-color: theme.$info-base,
);
$INFO_BORDERLESS: map.merge($INFO, (
  backgroundColor: transparent,
  borderColor: transparent,
));
$SUCCESS: (
  backgroundColor: theme.$success-l2,
  borderColor: theme.$success-l1,
  header-color: theme.$success-d1,
  icon-color: theme.$success-base,
);
$WARNING: (
  backgroundColor: theme.$warning-l2,
  borderColor: theme.$warning-l1,
  header-color: theme.$warning-d1,
  icon-color: theme.$warning-base,
);
$WARNING_BORDERLESS: (
  backgroundColor: transparent,
  borderColor: transparent,
  header-color: theme.$warning-d1,
  icon-color: theme.$warning-base,
);

@mixin theme($styles) {
  /* [debug] #{$_module}@theme */
  @include Component.theme(banner, $styles);
}


@mixin layout {
  /* [debug] #{$_module}@layout */
  padding: $paddingBlock $paddingInline;

  display: grid;
  grid-template-columns: auto 1fr;
  //grid-template-rows: auto auto auto;
  grid-template-areas:
    'icon header'
    '.    body'
    '.    footer';
  grid-gap: $rowGap $columnGap;

  &__icon {
    grid-area: icon;
  }

  &__header { // <:title>
    grid-area: header;
    margin-bottom: theme.$size--2xs; // FIXME: use grid-gap
  }

  &__body { // <:content>
    grid-area: body;
    margin-bottom: theme.$size--xs; // FIXME: use grid-gap
  }

  &__footer { // <:action>
    grid-area: footer;
  }
}

@mixin appearance {
  /* [debug] #{$_module}@appearance */
  background-color: $backgroundColor;
  border-radius: $borderRadius;
  border: 1px solid $borderColor;
  color: $color;
  font-size: $fontSize;

  &__icon {
    @include Icon.apply {
      color: $__icon-color;
      font-size: $__icon-size;
    }
  }

  // TODO: make use of Typography.* mixin
  &__header { // <:title>
    color: $__header-color;
    font-weight: Font.weight(semibold);
    font-size: $__header-fontSize;
  }

  &__body { // <:content>
    // tbd...
  }


  /// ----- Variants ----- ///
  &--error {
    @include theme($ERROR);
  }

  &--info {
    @include theme($INFO);
  }

  &--info-no-border {
    @include theme($INFO_BORDERLESS);
  }

  &--success {
    @include theme($SUCCESS);
  }

  &--warning {
    @include theme($WARNING);
  }

  &--warning-no-border {
    @include theme($WARNING_BORDERLESS);
  }
}

@mixin apply {
  /* [debug] #{$_module}@apply */
  .pds-banner {
    @content;
  }
}
